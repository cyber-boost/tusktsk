name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'sdk/go'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Go security check
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install gosec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

    - name: Run gosec
      run: cd sdk/go && gosec -fmt sarif -out gosec-results.sarif ./...

    - name: Upload gosec results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'gosec-results.sarif'

    - name: Run dependency check
      run: |
        cd sdk/go
        go list -m all | grep -E "(github\.com|golang\.org)" > dependencies.txt
        echo "Dependencies listed in dependencies.txt"

    - name: Check for known vulnerabilities
      run: |
        cd sdk/go
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... > vuln-report.txt || true

    - name: Upload vulnerability report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: vulnerability-report
        path: |
          sdk/go/dependencies.txt
          sdk/go/vuln-report.txt

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install license checker
      run: |
        go install github.com/google/go-licenses@latest

    - name: Check licenses
      run: |
        cd sdk/go
        go-licenses check ./... > license-report.txt || true

    - name: Generate license report
      run: |
        cd sdk/go
        go-licenses csv ./... > licenses.csv || true

    - name: Upload license report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: license-report
        path: |
          sdk/go/license-report.txt
          sdk/go/licenses.csv

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t tusktsk-go-sdk ./sdk/go

    - name: Run Trivy container scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'tusktsk-go-sdk:latest'
        format: 'sarif'
        output: 'trivy-container-results.sarif'

    - name: Upload container scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-container-results.sarif' 