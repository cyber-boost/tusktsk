name: Deploy to NuGet and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

    - name: Pack
      run: dotnet pack --no-build --configuration Release --output nupkgs

    - name: Publish to NuGet
      if: startsWith(github.ref, 'refs/tags/')
      run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## TuskLang C# SDK ${{ github.ref_name }}
          
          ### Features
          - Advanced configuration parsing and AST generation
          - Semantic analysis and type checking
          - Database integration with connection pooling
          - Comprehensive CLI framework
          - Hot reload and real-time updates
          - Extensible operator system
          
          ### Installation
          ```bash
          dotnet add package TuskLang.SDK
          ```
          
          ### Quick Start
          ```bash
          tsk parse config.tsk
          tsk validate config.tsk
          tsk serve
          ```
          
          See [README.md](README.md) for full documentation.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/TuskLang.SDK.${{ github.ref_name }}.nupkg
        asset_name: TuskLang.SDK.${{ github.ref_name }}.nupkg
        asset_content_type: application/octet-stream 