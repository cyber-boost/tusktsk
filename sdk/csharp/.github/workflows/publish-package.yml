name: Publish C# SDK Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Pack
      run: dotnet pack --no-build --configuration Release --output nupkgs
    
    - name: Publish to GitHub Packages
      run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/cyber-boost/index.json
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## TuskLang C# SDK v${{ github.ref_name }}
          
          ### What's New
          - Complete TSK configuration parsing
          - Advanced CLI with 11 commands
          - Database integration
          - Hot reload capabilities
          - Comprehensive documentation
          
          ### Installation
          ```bash
          dotnet add package TuskLang.SDK
          ```
          
          ### Documentation
          - [README](https://github.com/cyber-boost/tusktsk/blob/main/sdk/csharp/README.md)
          - [API Documentation](https://github.com/cyber-boost/tusktsk/blob/main/sdk/csharp/docs/)
          
          ### CLI Commands
          - `tsk parse` - Parse TSK files
          - `tsk compile` - Compile TSK files
          - `tsk validate` - Validate configurations
          - `tsk init` - Initialize projects
          - `tsk build` - Build projects
          - `tsk test` - Run tests
          - `tsk serve` - Development server
          - `tsk config` - Configuration management
          - `tsk project` - Project management
          - `tsk ai` - AI assistance
          - `tsk utility` - Utility tools
        draft: false
        prerelease: false 