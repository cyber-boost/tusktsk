name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build for multiple platforms
      run: |
        platforms=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64")
        for platform in "${platforms[@]}"; do
          GOOS=$(echo $platform | cut -d'/' -f1)
          GOARCH=$(echo $platform | cut -d'/' -f2)
          output_name="tusktsk-${GOOS}-${GOARCH}"
          if [ "$GOOS" = "windows" ]; then
            output_name="${output_name}.exe"
          fi
          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -a -installsuffix cgo -o $output_name .
        done

    - name: Create checksums
      run: |
        for binary in tusktsk-*; do
          if [ -f "$binary" ]; then
            sha256sum "$binary" > "${binary}.sha256"
          fi
        done

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: TuskLang Go SDK ${{ steps.version.outputs.version }}
        body: |
          ## TuskLang Go SDK ${{ steps.version.outputs.version }}
          
          ### What's New
          - Go SDK implementation
          - Docker container support
          - GitHub Packages integration
          - Multi-platform builds
          
          ### Installation
          ```bash
          go get github.com/cyber-boost/tusktsk/sdk/go@${{ steps.version.outputs.version }}
          ```
          
          ### Docker
          ```bash
          docker pull ghcr.io/${{ github.repository }}/go-sdk:${{ steps.version.outputs.version }}
          ```
          
          ### Downloads
          Pre-built binaries are available for the following platforms:
          - Linux (AMD64, ARM64)
          - macOS (AMD64, ARM64)
          - Windows (AMD64)
          
          ### Changelog
          See the [full changelog](https://github.com/${{ github.repository }}/releases) for details.
        files: |
          tusktsk-*
          *.sha256
        draft: false
        prerelease: false

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: always()

    steps:
    - name: Notify on success
      if: needs.release.result == 'success'
      run: |
        echo "Release ${{ steps.version.outputs.version }} created successfully!"
        # Add notification logic here (Slack, Discord, etc.)

    - name: Notify on failure
      if: needs.release.result == 'failure'
      run: |
        echo "Release ${{ steps.version.outputs.version }} failed!"
        # Add failure notification logic here 