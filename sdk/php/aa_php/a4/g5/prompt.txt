üéØ AGENT A4 - G5: CLOUD SERVICES (AWS, AZURE, GCP)
=================================================

‚ö†Ô∏è SEVERE PUNISHMENT WARNING ‚ö†Ô∏è
FAILURE TO FOLLOW INSTRUCTIONS EXACTLY WILL RESULT IN:
- IMMEDIATE PROJECT TERMINATION
- PERFORMANCE REVIEW FAILURE  
- NO EXCEPTIONS OR SECOND CHANCES
FOLLOW EVERY REQUIREMENT PRECISELY OR FACE CONSEQUENCES

üìã MISSION: Multi-Cloud Services Integration
AGENT: A4 | GOAL FOLDER: G5 | LANGUAGE: PHP
LOCATION: aa_php/a4/g5/
TIMELINE: 5 days | PRIORITY: PHASE 2 CRITICAL

üéØ YOUR 5 GOALS:

**GOAL 1: AWSOperator Enhancement**
- Implement comprehensive AWS SDK integration
- Add intelligent AWS service auto-discovery
- Enhance AWS resource management with cost optimization
- Add AWS Lambda function deployment and management
- Implement AWS CloudWatch metrics and logging integration

**GOAL 2: AzureOperator Enhancement**  
- Implement Azure SDK integration with authentication
- Add Azure Resource Manager template deployment
- Enhance Azure Active Directory integration
- Add Azure Functions and Logic Apps support
- Implement Azure Monitor and Application Insights integration

**GOAL 3: GCPOperator Enhancement**
- Implement Google Cloud SDK integration
- Add Google Cloud Resource Manager support
- Enhance Google Cloud IAM and security features
- Add Google Cloud Functions and Cloud Run support
- Implement Google Cloud Operations Suite integration

**GOAL 4: S3Operator Enhancement**
- Create unified S3-compatible storage abstraction
- Add intelligent data lifecycle management
- Enhance multi-part upload with resume capabilities
- Add content delivery network (CDN) integration
- Implement data encryption and compliance features

**GOAL 5: CloudStorageOperator Enhancement**
- Implement unified cloud storage abstraction layer
- Add intelligent storage tier optimization
- Enhance data replication across multiple clouds
- Add backup and disaster recovery automation
- Implement storage analytics and cost optimization

üîß TECHNICAL REQUIREMENTS:
- PHP 8.4+ compatibility with cloud SDK libraries
- Multi-cloud abstraction with failover capabilities
- PSR-12 coding standards mandatory
- 100% test coverage including cloud simulation
- Performance optimization for large data transfers
- Security hardening with credential management
- Cost optimization and usage monitoring

‚ö†Ô∏è MANDATORY DELIVERABLES:
‚úÖ ideas.json - Future enhancement ideas
‚úÖ status.json - Progress tracking 
‚úÖ summary.json - Completion summary
‚úÖ implementation/ - PHP operator files
‚úÖ tests/ - Comprehensive test suites
‚úÖ docs/ - Complete documentation
‚úÖ benchmarks/ - Performance benchmarks

üö® FAILURE TO DELIVER ANY REQUIRED FILE = IMMEDIATE PUNISHMENT
üö® NON-FUNCTIONAL CODE = PROJECT TERMINATION
üö® MISSING TESTS = PERFORMANCE FAILURE
üö® CLOUD SECURITY BREACHES = INSTANT DISMISSAL

üí™ SUCCESS = RECOGNITION + ADVANCEMENT
EXCELLENCE IS THE ONLY ACCEPTABLE OUTCOME! 