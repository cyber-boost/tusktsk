üéØ AGENT A4 - G1: FILE SYSTEM OPERATIONS
======================================

‚ö†Ô∏è SEVERE PUNISHMENT WARNING ‚ö†Ô∏è
FAILURE TO FOLLOW INSTRUCTIONS EXACTLY WILL RESULT IN:
- IMMEDIATE PROJECT TERMINATION
- PERFORMANCE REVIEW FAILURE  
- NO EXCEPTIONS OR SECOND CHANCES
FOLLOW EVERY REQUIREMENT PRECISELY OR FACE CONSEQUENCES

üìã MISSION: Advanced File System Operations
AGENT: A4 | GOAL FOLDER: G1 | LANGUAGE: PHP
LOCATION: aa_php/a4/g1/
TIMELINE: 3 days | PRIORITY: CRITICAL

üéØ YOUR 3 GOALS:

**GOAL 1: FileOperator Enhancement**
- Implement intelligent file operations with compression
- Add multi-threaded file processing capabilities
- Enhance file integrity verification with checksums
- Add atomic file operations with rollback support
- Implement predictive file caching system

**GOAL 2: DirectoryOperator Enhancement**  
- Implement cross-platform directory synchronization
- Add real-time directory monitoring with events
- Enhance directory tree operations with performance optimization
- Add recursive directory operations with progress tracking
- Implement intelligent directory cleanup and archiving

**GOAL 3: PermissionOperator Enhancement**
- Create advanced permission management system
- Implement role-based access control (RBAC)
- Add permission inheritance and conflict resolution
- Implement permission auditing with detailed logging
- Add dynamic permission adjustment based on context

üîß TECHNICAL REQUIREMENTS:
- PHP 8.4+ compatibility with advanced features
- Cross-platform file system support (Linux, Windows, macOS)
- PSR-12 coding standards mandatory
- 100% test coverage with edge case testing
- Performance benchmarking for large file operations
- Security hardening against path traversal attacks
- Memory-efficient operations for large files

‚ö†Ô∏è MANDATORY DELIVERABLES:
‚úÖ ideas.json - Future enhancement ideas
‚úÖ status.json - Progress tracking 
‚úÖ summary.json - Completion summary
‚úÖ implementation/ - PHP operator files
‚úÖ tests/ - Comprehensive test suites
‚úÖ docs/ - Complete documentation
‚úÖ benchmarks/ - Performance benchmarks

üö® FAILURE TO DELIVER ANY REQUIRED FILE = IMMEDIATE PUNISHMENT
üö® NON-FUNCTIONAL CODE = PROJECT TERMINATION
üö® MISSING TESTS = PERFORMANCE FAILURE
üö® SECURITY VULNERABILITIES = INSTANT DISMISSAL

üí™ SUCCESS = RECOGNITION + ADVANCEMENT
EXCELLENCE IS THE ONLY ACCEPTABLE OUTCOME! 