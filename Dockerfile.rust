# Rust SDK Dockerfile
FROM rust:1.75-alpine AS builder

# Set environment variables
ENV CARGO_HOME=/usr/local/cargo
ENV RUSTUP_HOME=/usr/local/rustup

# Install system dependencies
RUN apk add --no-cache \
    musl-dev \
    openssl-dev \
    pkgconfig \
    git \
    ca-certificates

# Set working directory
WORKDIR /app

# Copy Cargo files
COPY sdk/rust/Cargo.toml sdk/rust/Cargo.lock ./

# Create dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies
RUN cargo build --release

# Remove dummy main.rs and copy real source
RUN rm src/main.rs
COPY sdk/rust/ ./

# Build the application
RUN cargo build --release

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    libgcc

# Create non-root user
RUN addgroup -g 1001 -S tusktsk
RUN adduser -S tusktsk -u 1001

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/target/release/tusk-rust .

# Change ownership
RUN chown tusktsk:tusktsk /app/tusk-rust

# Switch to non-root user
USER tusktsk

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ./tusk-rust --version || exit 1

# Default command
CMD ["./tusk-rust", "--version"] 